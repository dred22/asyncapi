server.port: 8081

buildVersion: '@pom.version@'
apiVersion: v.1.0.0
spring:
  application:
    name: service-a
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:postgresql://localhost:5432/allyz-dev-aurora-main?currentSchema=home
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  kafka:
    properties:
      reconnect.backoff.ms: 1000
      retry.backoff.ms: 1000
    bootstrap-servers: localhost:9092
    consumer:
      group-id: service-a
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      order-cmd: order-cmd
      article-cmd: article-cmd
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      order-events: order-events

springwolf:
  docket:
    base-package: com.magomed.a
    info:
      title: ${spring.application.name}
      version: 1.0.0
      description: This service receives and execute order commands and the push order events
    servers.kafka-server:
      protocol: kafka
      host: ${spring.kafka.bootstrap-servers}